void sort_3_case1(t_stk **stack_a)
{
    ra(stack_a);
    sa(stack_a);
    rra(stack_a);
}

void sort_3_case2(t_stk ** stack_a, int bl)
{
    if(check == 0)
        sa(stack_a);
    else if(check == 1)
        rra(stack_a)
}

void sort_3_case3(t_stk **head,int min,t_stk **stack_a)
{
    if((*head)->next->index)
        ra(stack_a);
    else
    {
        sa(stack_a);
        rra(stack_a);
    }
}

static void sort_3(t_stk **stack_a)
{
    t_stk *head;
    int min;
    int next_min;
    int check;

    head = *stack_a;
    min = get_min(stack_a, -1);
    next_min = get_min(stack_a, min);
    check = 0;

    if (is_sorted(stack_a))
    return ;
    if (head->index == min && head->next->index != next_min)
        sort_3_case_1(stack_a);
    else if (head->index == next_min)
    {
        if (head->next->index == min)
            check = 1; 
        sort_3_case_2(stack_a, check);
    }
    sort_3_case_4(&head , min ,stack_a);
}